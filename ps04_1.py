from selenium import webdriver
from selenium.webdriver.common.by import By
import time
import random


def получить_запрос_пользователя():
    """Получает запрос от пользователя."""
    return input("Введите запрос для поиска в Википедии: ")


def открыть_страницу(запрос):
    """Открывает страницу Википедии по запросу."""
    browser.get(f"https://ru.wikipedia.org/wiki/{запрос}")
    time.sleep(2)  # Ждем загрузки страницы


def показать_параграфы():
    """Показывает параграфы текущей статьи."""
    параграфы = browser.find_elements(By.TAG_NAME, "p")
    for i, параграф in enumerate(параграфы):
        print(f"{i + 1}. {параграф.text[:100]}...")  # Показываем первые 100 символов

    while True:
        выбор_параграфа = input("\nВведите номер параграфа для просмотра (или '0' для возврата): ")
        if выбор_параграфа == '0':
            return
        try:
            номер = int(выбор_параграфа) - 1
            if 0 <= номер < len(параграфы):
                print("\n" + параграфы[номер].text + "\n")
            else:
                print("Неверный номер параграфа.")
        except ValueError:
            print("Неверный ввод. Введите номер параграфа или '0'.")


def показать_связанные_страницы():
    """Показывает связанные страницы."""
    связанные_ссылки = browser.find_elements(By.XPATH, "//a[@href and not(contains(@href, 'wiki:'))]")
    print("\nСвязанные страницы:\n")
    уникальные_ссылки = set()  # Используем множество для уникальности

    for i, ссылка in enumerate(связанные_ссылки):
        href = ссылка.get_attribute("href")
        if href not in уникальные_ссылки and "wiki" in href:
            уникальные_ссылки.add(href)
            print(f"{len(уникальные_ссылки)}. {ссылка.text}")

    while True:
        выбор_страницы = input("\nВведите номер страницы для перехода (или '0' для возврата): ")
        if выбор_страницы == '0':
            return
        try:
            номер = int(выбор_страницы) - 1
            if 0 <= номер < len(уникальные_ссылки):
                открыть_страницу(уникальные_ссылки.pop())
                обработка_страницы()
                return
            else:
                print("Неверный номер страницы.")
        except ValueError:
            print("Неверный ввод. Введите номер страницы или '0'.")


def обработка_страницы():
    """Предлагает действия для текущей страницы."""
    while True:
        print("\nВыберите действие:")
        print("1. Листать параграфы статьи")
        print("2. Перейти на одну из связанных страниц")
        print("3. Выйти")

        выбор = input("Введите номер действия: ")

        if выбор == '1':
            показать_параграфы()
        elif выбор == '2':
            показать_связанные_страницы()
        elif выбор == '3':
            print("Выход из программы.")
            browser.quit()
            exit()
        else:
            print("Неверный ввод. Пожалуйста, выберите действие из списка.")


def main():
    """Основная функция программы."""
    global browser
    browser = webdriver.Chrome()

    while True:
        запрос = получить_запрос_пользователя()
        открыть_страницу(запрос.replace(" ", "_"))  # Заменяем пробелы на подчеркивания
        обработка_страницы()


if __name__ == "__main__":
    main()



